apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-bluegreen
  namespace: default
spec:
  strategy:
    blueGreen:
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts resume ROLLOUT`
      # (Defaults to true)
      autoPromotionEnabled: false

      # The AutoPromotionSeconds will make the rollout automatically promote the new ReplicaSet to 
      # active Service after the AutoPromotionSeconds time has passed since the rollout has entered 
      # a paused state.
      # If the AutoPromotionEnabled field is set to true, this field will be ignored
      # (Defaults to nil)
      # autoPromotionSeconds: 30

      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: rollout-bluegreen-active
      
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: rollout-bluegreen-preview

      # The PreviewReplicaCount will indicate the number of replicas that the new version of an 
      # application should run. Once the application is ready to promote to the active service, 
      # the controller will scale the new ReplicaSet to the value of the spec.replicas. The rollout 
      # will not switch over the active service to the new ReplicaSet until it matches the spec.replicas 
      # count.
      # If omitted, preview ReplicaSet stack will be scaled to 100% of the replicas.
      # previewReplicaCount: 1

      # The ScaleDownDelaySeconds is used to delay scaling down the old ReplicaSet after the active 
      # Service is switched to the new ReplicaSet.
      # (Defaults to 30)
      # scaleDownDelaySeconds: 30

      # The ScaleDownDelayRevisionLimit limits the number of old active ReplicaSets to keep scaled up 
      # while they wait for the scaleDownDelay to pass after being removed from the active service.
      # If omitted, all ReplicaSets will be retained for the specified scaleDownDelay
      # scaleDownDelayRevisionLimit: 1

      # antiAffinity:
      #     # EITHER
      #     requiredDuringSchedulingIgnoredDuringExecution: {}
      #     # OR
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #       weight: 100

  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-bluegreen
  template:
    metadata:
      labels:
        app: rollout-bluegreen
    spec:
      containers:
        - name: rollouts-demo
          image: argoproj/rollouts-demo:green
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 5m
              memory: 32Mi
